@startuml Deployment Diagram
!theme plain
skinparam backgroundColor #FFFFFF

node "Raspberry Pi 5" {
    node "Hardware Layer" {
        [Hailo AI Accelerator] as HAILO
        [PiCamera2 Module] as CAMERA
        [8GB RAM] as RAM
        [64GB SD Card] as STORAGE
        [Ethernet/WiFi] as NETWORK
    }
    
    node "Operating System" {
        [Raspberry Pi OS] as OS
        [Python 3.8+] as PYTHON
        [OpenCV] as OPENCV
        [Picamera2] as PICAM2
    }
    
    node "AI Camera System v2" {
        node "Core Application" {
            [Flask Web Server\nPort 5000] as FLASK
            [Camera Manager] as CAM_MGR
            [Detection Thread] as DETECT
            [Health Monitor] as HEALTH
            [Database Manager] as DB_MGR
        }
        
        node "AI Models" {
            [Vehicle Detection\nYOLOv8n] as VEH_MODEL
            [License Plate Detection\nYOLOv8n] as LP_MODEL
            [Hailo OCR Model] as HAILO_OCR
            [EasyOCR] as EASY_OCR
        }
        
        node "Data Storage" {
            [SQLite Database\nlpr_data.db] as SQLITE
            [Image Storage\ncaptured_images/] as IMG_STORE
            [Log Files\nlogs/] as LOGS
        }
        
        node "Web Interface" {
            [Static Files\nCSS/JS] as STATIC
            [HTML Templates] as TEMPLATES
            [API Endpoints] as API
        }
    }
    
    node "Configuration" {
        [Environment Variables\n.env.production] as ENV
        [Camera Config\ncamera_config.py] as CAM_CONFIG
        [System Config\nconfig.py] as SYS_CONFIG
    }
}

node "Client Devices" {
    [Web Browser\nChrome/Firefox] as BROWSER
    [Mobile Browser] as MOBILE
    [Tablet Browser] as TABLET
}

node "External Systems" {
    [Network Router] as ROUTER
    [Internet Connection] as INTERNET
}

' Hardware connections
CAMERA --> CAM_MGR : USB/CSI
HAILO --> VEH_MODEL : PCIe
HAILO --> LP_MODEL : PCIe
HAILO --> HAILO_OCR : PCIe
RAM --> FLASK : Memory
STORAGE --> SQLITE : File System
STORAGE --> IMG_STORE : File System
STORAGE --> LOGS : File System
NETWORK --> ROUTER : Ethernet/WiFi

' Software connections
OS --> PYTHON : Runtime
PYTHON --> OPENCV : Library
PYTHON --> PICAM2 : Library
PYTHON --> FLASK : Framework

FLASK --> CAM_MGR : Controls
FLASK --> DETECT : Manages
FLASK --> HEALTH : Monitors
FLASK --> DB_MGR : Queries
FLASK --> API : Provides
FLASK --> STATIC : Serves
FLASK --> TEMPLATES : Renders

CAM_MGR --> CAMERA : Controls
CAM_MGR --> CAM_CONFIG : Uses

DETECT --> VEH_MODEL : Uses
DETECT --> LP_MODEL : Uses
DETECT --> HAILO_OCR : Uses
DETECT --> EASY_OCR : Uses
DETECT --> DB_MGR : Saves
DETECT --> IMG_STORE : Saves

HEALTH --> CAM_MGR : Monitors
HEALTH --> DB_MGR : Logs
HEALTH --> LOGS : Writes

DB_MGR --> SQLITE : Manages

' Network connections
ROUTER --> BROWSER : HTTP/HTTPS
ROUTER --> MOBILE : HTTP/HTTPS
ROUTER --> TABLET : HTTP/HTTPS
INTERNET --> ROUTER : WAN

' Configuration
ENV --> FLASK : Environment
CAM_CONFIG --> CAM_MGR : Settings
SYS_CONFIG --> FLASK : Settings

@enduml 