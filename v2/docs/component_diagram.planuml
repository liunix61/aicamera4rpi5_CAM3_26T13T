@startuml AI_Camera_ALPR_Component

title Component Diagram - AI Camera (ALPR)

package "Edge Device (Raspberry Pi 5)" {
  [CameraHandler] 
  [Detection_thread]
  [Metadata_thread]
  [HealthMonitor]
  [WebSocket Sender]
  [Flask Web Application]
  [Video Feed]
}

package "External Systems" {
  [LPR Server]
  [WebSocket Server]
}

package "Storage" {
  [SQLite Database]
  [Image Folder]
  [Log Folder]
}

[CameraHandler] --> [frames_queue]
[CameraHandler] --> [metadata_queue]
[CameraHandler] --> [Video Feed]
[CameraHandler] --> [Flask Web Application] : API control

[Video Feed] --> [Flask Web Application] : /video_feed

[Metadata_thread] --> [metadata_queue]
[Metadata_thread] --> [Flask Web Application] : SocketIO

[Detection_thread] --> [frames_queue]
[Detection_thread] --> [SQLite Database] : save results
[Detection_thread] --> [Image Folder] : save cropped images

[HealthMonitor] --> [SQLite Database] : log health checks
[HealthMonitor] --> [Flask Web Application] : /healthmonitor

[WebSocket Sender] --> [SQLite Database] : query unsent data
[WebSocket Sender] --> [WebSocket Server] : send JSON + images

[Flask Web Application] --> [CameraHandler] : /update_camera_settings
[Flask Web Application] --> [Detection_thread] : start/stop
[Flask Web Application] --> [HealthMonitor] : start/stop
[Flask Web Application] --> [WebSocket Sender] : start/stop
[Flask Web Application] --> [SQLite Database] : query detection & health
[Flask Web Application] --> [Log Folder] : manage logs
[Flask Web Application] --> [Image Folder] : manage images

[LPR Server] --> [WebSocket Server] : receive data
[LPR Server] --> [MySQL Database] : centralized storage
[LPR Server] --> [Flask Web Application] : dashboard, analysis

@enduml
